import os
import time
import pyttsx3
import getpass
os.system("clear")
time.sleep(1)
os.system("tput setaf 11")
print("+++++++++++++++++++++++++++++++++++++++++")
os.system("tput setaf 14")
print("""|    |  ___       ____  ____        ____
| /\ | |___| |   |     |    | |\/| |____|
|/  \| |___  |__ |____ |____| |  | |_____""")
os.system("tput setaf 11")
print("+++++++++++++++++++++++++++++++++++++++++")
print("\n")
time.sleep(1)
os.system("tput setaf 10")
print("+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++")
os.system("tput setaf 9")
print("""   ___          _____  ___         _____ _____  ____    ___     _____  _____   ____  
  /   \   |   |   |   |   |  |\  |   |     |   (       /   \      |      |    (    ) |\  |
 /---- \  |   |   |   |___|  | \ |   |     |   |      /-----\     |      |    |    | | \ |
/       \ (___)   |   |____  |  \|   |   __|__ (____ /       \    |    __|__  (____) |  \|""")
os.system("tput setaf 10")
print("+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++")
print("\n")
os.system("tput setaf 7")
print("+++++++++++++++++++++++++++++++++++++++++++++++++++")
password = getpass.getpass("Enter the correct password to pass authentication: ")
if (('redhat') not in password):
    time.sleep(1)
    print("\n")
    print("+++++++++++++++++++++++++++++")
    print("CHECKING THE ENTERED PASSWORD")
    print("+++++++++++++++++++++++++++++")
    print("\n")
    time.sleep(2)
    print("+++++++++++++++++++++++++++++++")
    print("Password entered is 'INCORRECT'")
    print("+++++++++++++++++++++++++++++++")
    print("\n")
    time.sleep(1)
    print("+++++++++++++++++++")
    print("Exiting the program")
    print("+++++++++++++++++++")
    time.sleep(1)
    exit()
else:
    time.sleep(1)
    print("\n")
    print("+++++++++++++++++++++++++++++")
    print("CHECKING THE ENTERED PASSWORD")
    print("+++++++++++++++++++++++++++++")
    print("\n")
    time.sleep(2)
    print("++++++++++++++++++++++++++++++++++++++++++++++++++++")
    print("CONGRATULATIONS!!!!    Password entered is 'CORRECT'")
    print("++++++++++++++++++++++++++++++++++++++++++++++++++++")
    time.sleep(1)
    os.system("clear")
    while True:
        def main():
            os.system("tput setaf 11")
            print("\t\t\t\t\t\t\t\t+++++++++++++++++++++++++++++++++++++++++++")
            os.system("tput setaf 14")
            print("\t\t\t\t\t\t\t\t|    |  ___       ____  ____   _  _   ____ ")
            print("\t\t\t\t\t\t\t\t| /\ | |___| |   |     |    | | \/ | |____|")
            print("\t\t\t\t\t\t\t\t|/  \| |___  |__ |____ |____| |    | |_____")
            os.system("tput setaf 11")
            print("\t\t\t\t\t\t\t\t+++++++++++++++++++++++++++++++++++++++++++")
            print("\n")
            os.system("tput setaf 78")
            print("\t\t\t++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++")
            os.system("tput setaf 69")
            print("\t\t\t ____     ______   _____        ____   ____                      __              _____   ____                   ___     _____  ______   _____ ")
            print("\t\t\t|    \   (      ) (       | /  |      |    |          |\  /|    /  \     |\   |    |    |    | |    | |        /   \      |   (      ) |     |")
            print("\t\t\t|     \  |      | |       |/   |__    |____|          | \/ |   /    \    | \  |    |    |____| |    | |       /-----\     |   |      | |_____|")
            print("\t\t\t|     /  |      | |       |\   |      |\              |    |  /------\   |  \ |    |    |      |    | |      /       \    |   |      | |\     ")
            print("\t\t\t|____/   (______) (_____  | \  |____  | \___          |    | /        \  |   \|  __|__  |      (____) |____ /         \   |   (______) | \____")
            os.system("tput setaf 78")
            print("\t\t\t++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++")
            print("\n")
            time.sleep(0.25)
            os.system("tput setaf 9")
            print("1. Press to configure 'DOCKER' engine in your system")
            time.sleep(0.25)
            os.system("tput setaf 11")
            print("2. Press to confirm 'DOCKER' installation") 
            time.sleep(0.25)
            os.system("tput setaf 14")
            print("3. Press to see the list of 'DOCKER' images in your system")
            time.sleep(0.25)
            os.system("tput setaf 1")
            print("4. Press to search for a particular image")
            time.sleep(0.25)
            os.system("tput setaf 27")
            print("5. Press to pull an Image from 'DOCKER' Hub")
            time.sleep(0.25)
            os.system("tput setaf 45")
            print("6. Press to launch a Container")
            time.sleep(0.25)
            os.system("tput setaf 40")
            print("7. Press to launch a Container in 'DETACHED' mode")
            time.sleep(0.25)
            os.system("tput setaf 3")
            print("8. Press to launch a Container in 'PAT' mode")
            time.sleep(0.25)
            os.system("tput setaf 69")
            print("9. Press to see the running containers")
            time.sleep(0.25)
            os.system("tput setaf 78")
            print("10.Press to stop a running container")
            time.sleep(0.25)
            os.system("tput setaf 7")
            print("-------------------------------------------------------------------")
            os.system("tput setaf 51")
            print("Press '0' on your Keyboard to EXIT the program")
            time.sleep(0.25)
            os.system("tput setaf 7")
            print("===================")
            print("Enter your choice: ", end="")
            choice = input()
            if int(choice) == 1:
                time.sleep(0.5)
                print("+++++++++++++++++++++++++++++++")
                print("Getting Ready for configuration")
                print("+++++++++++++++++++++++++++++++")
                time.sleep(1)
                print("+++++++++++++++++++++++++++++")
                print("Checking for Docker repo file")
                print("+++++++++++++++++++++++++++++")
                os.system("touch /etc/yum.repos.d/docker.repo")
                os.system("echo [docker] > /etc/yum.repos.d/docker.repo")
                os.system("echo name = Docker repo >> /etc/yum.repos.d/docker.repo")
                os.system("echo baseurl = https://download.docker.com/linux/centos/7/x86_64/stable/ >> /etc/yum.repos.d/docker.repo")
                os.system("echo gpgcheck = 0 >> /etc/yum.repos.d/docker.repo")
                time.sleep(3)
                print("+++++++++++++++++++++++++++++++++++")
                print("Docker repo is successfully created")
                print("+++++++++++++++++++++++++++++++++++")
                time.sleep(1)
                print("\n")
                print("=======================================")
                print("Installing Docker package in the system")
                print("=======================================")
                os.system("yum clean all")
                os.system("yum install docker-ce -y --nobest")
                time.sleep(2)
                print("++++++++++++++++++++++++++++++++")
                print("Docker is Installed successfully")
                print("++++++++++++++++++++++++++++++++")
                print("\n")
                time.sleep(1)
                print("======================================")
                print("Enabling Docker Services in the system")
                print("======================================")
                os.system("systemctl start docker")
                os.system("systemctl enable docker")
                time.sleep(2)
                print("++++++++++++++++++++++++++++++")
                print("Services are running perfectly")
                print("++++++++++++++++++++++++++++++")
                print("\n")
                time.sleep(1)
                print("======================================")
                print("Bypassing firewall security procedures")
                print("======================================")
                os.system("systemctl start firewalld")
                os.system("systemctl enable firewalld")
                os.system("firewall-cmd --zone=public --add-masquerade --permanent")
                os.system("firewall-cmd --zone=public --add-port=80/tcp --permanent")
                os.system("firewall-cmd --zone=public --add-port=443/tcp --permanent")
                os.system("firewall-cmd --reload")
                os.system("systemctl stop firewalld")
                os.system("systemctl disable firewalld")
                time.sleep(2)
                print("+++++++++++++++++++++++++++++++++++")
                print("Firewall rules are successfully set")
                print("+++++++++++++++++++++++++++++++++++")
                time.sleep(1)
                print("\n")
                print("===============================================")
                print("Docker is successfully installed in your system")
                print("===============================================")
                time.sleep(0.5)
                print("============================================")
                print("Check the outcome in the output listed below") 
                print("============================================")
                os.system("docker version")
            elif int(choice) == 2:
                time.sleep(1)
                print("==================================================")
                print("Here's the Docker version available in your system")
                print("==================================================")
                os.system("docker version")
            elif int(choice) == 3:
                time.sleep(1)
                print("=================================================")
                print("The available docker images in your system are :-")
                print("=================================================")
                os.system("docker images")
            elif int(choice) == 4:
                time.sleep(1)
                print("===================================================")
                print("Search for a particular Docker Image in your system")
                print("===================================================")
                print("Enter the name of the Image you want to search: ", end="")
                search = input()
                os.system("docker images | grep {0}".format(search))
            elif int(choice) == 5:
                time.sleep(1)
                print("==================================================")
                print("Pull an Image from Docker Hub in your Local system")
                print("==================================================")
                print("Enter the name of the Image you want to pull: ", end="")
                img_pull = input()
                os.system("docker pull {}".format(img_pull))
            elif int(choice) == 6:
                time.sleep(1)
                print("=====================================")
                print("Run a Docker Container of your Choice")
                print("=====================================")
                print("\n")
                time.sleep(0.5)
                print("---------------------------------------------------")
                print("Here are the available Docker Images in your system")
                print("---------------------------------------------------")
                os.system("docker images")
                print("\n")
                print("Enter the name for your Container: ", end="")
                container_name = input()
                print("Which Image you want to use: ", end="")
                image_name = input()
                print("\n")
                time.sleep(0.5)
                print("---------------------------------------------------------")
                print("Launching the Container with the name {}......".format(container_name))
                print("---------------------------------------------------------")
                os.system("docker run -i -t --name {} {} > /dev/pts/0".format(container_name,image_name)) 
            elif int(choice) == 7:
                time.sleep(1)
                print("=========================================")
                print("Run a Docker Container in 'DETACHED' mode")
                print("=========================================")
                print("Enter the name for your container: ", end="")
                cont_name = input()
                time.sleep(0.5)
                print("--------------------------------------------")
                print("Here are the available Images in your system")
                print("--------------------------------------------")
                time.sleep(0.5)
                os.system("docker images")
                print("\n")
                print("Enter the Image name with which you want to run the container with: ", end="")
                img_name = input()
                print("\n")
                time.sleep(0.5)
                print("----------------------------------------------------------")
                print("Launching the Container with the name {}.......".format(cont_name))
                print("----------------------------------------------------------")
                os.system("docker run -d -i -t --name {0} {1}".format(cont_name,img_name))
                time.sleep(0.5)
                print("++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++")
                print("Your Container with the name {} of the image {} is launched successfully".format(cont_name,img_name)) 
                print("++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++")
                time.sleep(0.25)
                print("+++++++++++++++++++++++++++++++++++")
                print("Confirm from the output given below")
                print("+++++++++++++++++++++++++++++++++++")
                os.system("docker ps")
                print("\n")
            elif int(choice) == 8:
                time.sleep(1)
                print("==========================================")
                print("Expose your Container to the outside world")
                print("==========================================")
                print("Enter the name for your Container: ", end="")
                pat_cont_name = input()
                time.sleep(0.5)
                print("---------------------------------------")
                print("Available Images in your system are :- ")
                print("---------------------------------------")
                os.system("docker images")
                print("\n")
                print("Enter the Image name you want to launch the Container with: ", end="")
                pat_img_name = input()
                print("Enter the Port number on which you want to expose the container: ", end="")
                port_number = input()
                print("\n")
                time.sleep(0.5)
                print("----------------------------------------------------------")
                print("Launching the Container with the name {}.......".format(pat_cont_name))
                print("----------------------------------------------------------")
                os.system("docker run -d -i -t -p {0}:80 --name {1} {2}".format(port_number,pat_cont_name,pat_img_name))
                time.sleep(0.5)
                print("+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++")
                print("Your Container with the name {} of the Image {} is exposed successfully on port number {}".format(pat_cont_name,pat_img_name,port_number))
                print("+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++")
                time.sleep(0.25)
                print("+++++++++++++++++++++++++++++")
                print("Confirm from the output below")                
                print("+++++++++++++++++++++++++++++")
                os.system("docker ps")
                print("\n")
            elif int(choice) == 9:
                time.sleep(1)
                print("========================================================")
                print("Here's the list of the Containers running in your system")
                print("========================================================")
                os.system("docker ps")
            elif int(choice) == 10:
                time.sleep(1)
                print("========================")
                print("Stop a running Container")
                print("========================")
                time.sleep(0.5)
                print("===================================")
                print("Here are all the Containers running")
                print("===================================")
                os.system("docker ps")
                print("\n")
                print("Enter the name of the Container you want to stop: ", end="")
                stop_cont_name = input()
                os.system("docker rm {0} -f".format(stop_cont_name))
                time.sleep(0.5)                
                print("++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++")
                print("Container with the name {} is stopped successfully".format(stop_cont_name))
                print("++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++")
                print("\n")
                time.sleep(0.5)
                print("-----------------------------")
                print("Confirm from the below output")
                print("-----------------------------")
                print("\n")
                os.system("docker ps")
            elif int(choice) == 0:
                time.sleep(1)
                print("\n")
                print("++++++++++++++++++++++++++++")
                print("Option to 'EXIT' the program")
                print("++++++++++++++++++++++++++++")
                print("\n")
                time.sleep(1)
                print("---------------------------------------------")
                print("Do you want to exit the Program (Y/N) : ", end="")
                exit_choice = input()
                if (('y') in exit_choice or ('Y') in exit_choice or ('yes') in exit_choice or ('YES') in exit_choice or ('Yes') in exit_choice):
                    time.sleep(1)
                    print("\n")
                    print("----------------------------------------------------------------")
                    print("OK..... Exiting the program. It's been a fun time. See ya around")
                    print("----------------------------------------------------------------")
                    time.sleep(2)
                    exit()
                else:
                    print("\n")
                    time.sleep(1)
                    print("---------------------------------------")
                    print("Returning back to the program..........")
                    print("---------------------------------------")
                    time.sleep(1)
                    return main()
            else:
                time.sleep(1)
                print("=========================================")
                print("INVALID CHOICE.....ENTER THE CHOICE AGAIN")
                print("=========================================")
                print("\n")
        main() 
        print("++++++++++++++++++++++++++++++++++++")
        print("If you want to continue, hit 'ENTER'")
        input("++++++++++++++++++++++++++++++++++++")
        os.system("clear")





